{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","data","SearchBox","changeHandler","placeholder","type","onChange","App","useState","setMonsters","search","setSearch","filteredMonsters","filter","toLowerCase","includes","useEffect","fetch","then","response","json","e","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAeeA,MAbf,YAA4B,IAAZC,EAAW,EAAXA,QACd,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAQG,GAAlC,0BACHC,IAAI,YAEN,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCGHC,MAVf,YAAiC,IAAbC,EAAY,EAAZA,SAClB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAAoBV,QAASU,GAAlBA,EAAKP,U,MCMTQ,MAXf,YAAoD,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,YAClC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLC,SAAUH,EACVC,YAAaA,KCuBJG,MA1Bf,WAAgB,IAAD,EACmBC,mBAAS,CAAEP,KAAM,KADpC,mBACNF,EADM,KACIU,EADJ,OAEeD,mBAAS,CAAEE,OAAQ,KAFlC,mBAENA,EAFM,KAEEC,EAFF,KAIPC,EAAmBb,EAASE,KAAKY,QAAO,SAACtB,GAC7C,OAAOA,EAAQK,KAAKkB,cAAcC,SAASL,EAAOA,OAAOI,kBAS3D,OANAE,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACjB,GAAD,OAAUQ,EAAY,CAAER,cAC/B,IAGD,sBAAKT,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,cAAe,SAACkB,GAAD,OAAOV,EAAU,CAAED,OAAQW,EAAEC,OAAOC,SACnDnB,YAAY,qBAEd,cAAC,EAAD,CAAUL,SAAUa,QCrB1BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf94a95f.chunk.js","sourcesContent":["import \"./card.styles.css\";\n\nfunction Card({ monster }) {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n        alt=\"monster\"\n      />\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  );\n}\n\nexport default Card;\n","import \"./card-list.styles.css\";\nimport Card from \"../card/card.component\";\n\nfunction CardList({ monsters }) {\n  return (\n    <div className=\"card-list\">\n      {monsters.map((data) => (\n        <Card key={data.id} monster={data} />\n      ))}\n    </div>\n  );\n}\n\nexport default CardList;\n","import \"./search-box.styles.css\";\n\nfunction SearchBox({ changeHandler, placeholder }) {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      onChange={changeHandler}\n      placeholder={placeholder}\n    />\n  );\n}\n\nexport default SearchBox;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\nfunction App() {\n  const [monsters, setMonsters] = useState({ data: [] });\n  const [search, setSearch] = useState({ search: \"\" });\n\n  const filteredMonsters = monsters.data.filter((monster) => {\n    return monster.name.toLowerCase().includes(search.search.toLowerCase());\n  });\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((data) => setMonsters({ data }));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n        changeHandler={(e) => setSearch({ search: e.target.value })}\n        placeholder=\"Enter Monster...\"\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}